$_SERVER['QUERY_STRING'] -- хранит строку переданную после знака "?"
Строка $_SERVER['QUERY_STRING'], как и одноименная переменная окружения, всегда приходит
в той же самой форме, в какой она была послана браузером;

PHP проводит некоторую работу с переменной QUERY_STRING перед передачей
управления сценарию он разбивает ее по пробельным символам.

PHP сам определяет, какой метод был задействован
(благо, информация об этом доступна через переменную окружения
REQUEST_METHOD), и получает данные либо из QUERY_STRING, либо из стандартного входного
потока. 

 // Команда блокирования рабочей станции (работает в NT-системах)
 system("rundll32.exe user32.dll,LockWorkStation");


  <?= выражение ?> Она является не чем иным, как
просто более коротким обозначением для <?php echo выражение ?>, и предназначена для
того, чтобы вставлять величины прямо в HTML-страницу. 

$_SERVER['SCRIPT_NAME'] -- содержит имя текущего файла сценария;

REMOTE_ADDR -- хранит ip адресс пользователя что запустил файл;
HTTP_USER_AGENT -- хранит тип браузера;

Все cookies, пришедшие скрипту, попадают в массив $_COOKIES;

 $_GET — содержит GET-параметры, пришедшие скрипту через переменную окружения
QUERY_STRING. Например, $_GET['login'];
 $_POST — данные формы, пришедшие методом POST;
 $_COOKIE — все cookies, которые прислал браузер;
 $_REQUEST — объединение трех перечисленных выше массивов. Именно эту переменную
рекомендуется использовать в скриптах, потому что таким образом мы не
"привязываемся" жестко к типу принимаемых данных (GET или POST);
 $_SERVER — содержит переменные окружения, переданные сервером (отсюда и название);

 Глобальные переменные доступны через используемый массив $GLOBALS;

По умолчанию трансляция выполняется в порядке GET–POST–COOKIE (GPC), причем каждая следующая переменная перекрывает предыдущее
свое значение (если оно существовало);