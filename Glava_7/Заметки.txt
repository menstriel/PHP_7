—равнение сложных переменных:
— точки зрени€ PHP константа 1 и значение true не идентичны. ћы
видим, что в операторах сравнени€ (на равенство ==, а также на неравенство !=) PHP
интерпретирует один из операндов как логический, если другой Ч логический исходно.
»ными словами, сравнива€ что-то с true или false €вно, мы всегда имеем в виду логическое
сравнение, так что 100 == true, а 0 == false. 

≈сли один из операндов оператора сравнени€ числовой, то сравнение всегда выполн€етс€
в числовом контексте, даже если второй операнд Ч не число. 

ѕодвод€ итог, можно сделать такой вывод: две переменные равны в смысле ==, если "на
глаз" они хран€т одинаковые величины. 

ќпераци€ эквивалентности:
=== (тройное равенство). ќн не только сравнивает два выражени€, но также их типы. —равнивает и массивы.

»ными словами, при сравнении на эквивалентность двух переменных-объектов провер€етс€,
ссылаютс€ ли они на один и тот же объект. 

ќператор <=>:
— использованием оператора <=> и анонимной функции приведенный выше пример
можно переписать гораздо короче
<?php
 $arr = array(3, 1, 7, 6, 9, 4);
 usort($arr, function($a, $b) { return $a <=> $b; });
 print_r($arr); // 1, 3, 4, 6, 7, 9
?> 



